(window.webpackJsonp=window.webpackJsonp||[]).push([[33],{600:function(t,s,a){"use strict";a.r(s);var n=a(5),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",[t._v("面试题汇总©")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"_1-从输入一个url地址到浏览器完成渲染的整个过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-从输入一个url地址到浏览器完成渲染的整个过程"}},[t._v("#")]),t._v(" 1.从输入一个URL地址到浏览器完成渲染的整个过程")]),t._v(" "),a("ol",[a("li",[t._v("浏览器地址栏输入URL并回车")]),t._v(" "),a("li",[t._v("浏览器查找当前URL是否存在缓存，并比较缓存是否过期")]),t._v(" "),a("li",[t._v("DNS解析URL对应的IP")]),t._v(" "),a("li",[t._v("根据IP建立TCP连接（三次握手）")]),t._v(" "),a("li",[t._v("发送http请求")]),t._v(" "),a("li",[t._v("服务器处理请求，浏览器接受HTTP响应")]),t._v(" "),a("li",[t._v("浏览器解析并渲染页面")]),t._v(" "),a("li",[t._v("关闭TCP连接（四次握手）")])]),t._v(" "),a("p",[t._v("详解："),a("a",{attrs:{href:"https://juejin.cn/post/6844903832435032072",target:"_blank",rel:"noopener noreferrer"}},[t._v("从输入一个URL地址到浏览器完成渲染的整个过程"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"_2-css优先级怎么计算的"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-css优先级怎么计算的"}},[t._v("#")]),t._v(" 2.css优先级怎么计算的")]),t._v(" "),a("ul",[a("li",[t._v("第一优先级：!important会覆盖页面内任何位置的元素样式")]),t._v(" "),a("li",[t._v('1.内联样式，如style="color:green"，权值为1000')]),t._v(" "),a("li",[t._v("2.ID选择器，如#app，权值为0100")]),t._v(" "),a("li",[t._v('3.类，伪类，属性选择器，如.foo,:first-child,div[class="foo"],权值为0010')]),t._v(" "),a("li",[t._v("4.标签，伪元素选择器，如div::frist-line,权值为0001")]),t._v(" "),a("li",[t._v("5.通配符，子类选择器，兄弟选择器，如*,>,+,权值为0000")]),t._v(" "),a("li",[t._v("6.继承的样式没有权值")])]),t._v(" "),a("h3",{attrs:{id:"_3-http状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-http状态码"}},[t._v("#")]),t._v(" 3.HTTP状态码")]),t._v(" "),a("ul",[a("li",[t._v("200：请求被正常处理")]),t._v(" "),a("li",[t._v("204：请求被受理但没有资源可以返回")]),t._v(" "),a("li",[t._v("206：客户端只是请求资源中的一部分，服务器只对请求的部分资源执行GET方法，相应报文中通过Content-Range指定范围的资源。")]),t._v(" "),a("li",[t._v("301：永久性重定向")]),t._v(" "),a("li",[t._v("302：临时重定向")]),t._v(" "),a("li",[t._v("303：与302状态码有相似功能，只是它希望客户端在请求一个URI的时候，能通过GET方法重定向到另一个URI上")]),t._v(" "),a("li",[t._v("304：（未修改） 自从上次请求后，请求的网页未修改过。 服务器返回此响应时，不会返回网页内容。")]),t._v(" "),a("li",[t._v("307：临时重定向，与302类似，只是强制要求使用POST方法")]),t._v(" "),a("li",[t._v("400：（错误请求） 服务器不理解请求的语法（一般为参数错误）。")]),t._v(" "),a("li",[t._v("401：（未授权） 请求要求身份验证。 对于需要登录的网页，服务器可能返回此响应。")]),t._v(" "),a("li",[t._v("403：（禁止） 服务器拒绝请求。（一般为客户端的用户权限不够）")]),t._v(" "),a("li",[t._v("404：（未找到） 服务器找不到请求的网页。")]),t._v(" "),a("li",[t._v("500：服务器内部错误")]),t._v(" "),a("li",[t._v("503：服务器正忙")])]),t._v(" "),a("h3",{attrs:{id:"_4-http2-0-做了哪些改进-3-0呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-http2-0-做了哪些改进-3-0呢"}},[t._v("#")]),t._v(" 4.HTTP2.0 做了哪些改进，3.0呢？")]),t._v(" "),a("p",[a("strong",[t._v("HTTP2.0 特性如下")])]),t._v(" "),a("ul",[a("li",[t._v("二进制分帧传输")]),t._v(" "),a("li",[t._v("多路复用")]),t._v(" "),a("li",[t._v("头部压缩")]),t._v(" "),a("li",[t._v("服务器推送\n"),a("br"),t._v("\nHttp3.0 相对于 Http2.0 是一种脱胎换骨的改变！"),a("br"),t._v("\nhttp 协议是应用层协议，都是建立在传输层之上的。我们也都知道传输层上面不只有 TCP 协议，"),a("br"),t._v("\n还有另外一个强大的协议 UDP 协议，2.0 和 1.0 都是基于 TCP 的，因此都会有 TCP 带来的硬伤以及局限性。"),a("br"),t._v("\n而 Http3.0 则是建立在 UDP 的基础上。所以其与 Http2.0 之间有质的不同。"),a("br")])]),t._v(" "),a("p",[a("strong",[t._v("http3.0 特性如下")])]),t._v(" "),a("ul",[a("li",[t._v("连接迁移")]),t._v(" "),a("li",[t._v("无队头阻塞")]),t._v(" "),a("li",[t._v("自定义的拥塞控制")]),t._v(" "),a("li",[t._v("前向安全和前向纠错")])]),t._v(" "),a("h3",{attrs:{id:"_5-position有哪些值-作用分别是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-position有哪些值-作用分别是什么"}},[t._v("#")]),t._v(" 5.position有哪些值，作用分别是什么")]),t._v(" "),a("ul",[a("li",[t._v("static")])]),t._v(" "),a("blockquote",[a("p",[t._v("static（没有定位）是position的默认值，元素处于正常的文档流中，会忽略left，top，right，bottom 和 z-index 属性。")])]),t._v(" "),a("ul",[a("li",[t._v("relative")])]),t._v(" "),a("blockquote",[a("p",[t._v("relative（相对定位）是指给元素设置相对于原本位置的定位，元素并不脱离文档流，因此元素原本的位置会被保留，其他的元素位置不会受到影响")])]),t._v(" "),a("p",[a("code",[t._v("一般用在子元素相对于父元素进行定位")])]),t._v(" "),a("ul",[a("li",[t._v("absolute（绝对定位）是指给元素设置绝对的定位，相对定位的对象可以分为两种情况：")])]),t._v(" "),a("ol",[a("li",[t._v("设置了absolute的元素如果存在有祖先元素设置了position为relative或者absolute，则这时元素的定位对象为此已设置position的祖先元素")]),t._v(" "),a("li",[t._v("如果并没有设置了position属性的祖先元素，则此时相对于body进行定位。")])]),t._v(" "),a("blockquote",[a("p",[t._v("使用场景：跟随图标 图标使用不依赖定位父级的 absolute 和 margin 属性进行定位，这样，当文本的字符个数改变时，图标的位置可以自适应")])]),t._v(" "),a("ul",[a("li",[t._v("fixed 可以简单的说说特殊版的 absolute，fixed元素总是相对于body定位。")])]),t._v(" "),a("blockquote",[a("p",[t._v("使用场景：侧边栏或者广告图")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("inherit 继承父元素的position属性，但需要注意的是 IE8 以及以往的版本都不支持 inherit 属性。")])]),t._v(" "),a("li",[a("p",[t._v("设置了 sticky 的元素，在屏幕范围（viewport）时该元素的位置并不受到定位影响（设置是 top、left 等属性无效），当该元素的位置将要移出偏移范围时，定位又会变成 fixed，根据设置的 left、top 等属性成固定位置的效果。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("当元素在容器中被滚动超过指定的偏移值时，元素在容器内固定在指定位置。亦即如果你设置了 top: 50px，那么在 sticky 元素到达距离相对定位的元素顶部 50px 的位置时固定，不再向上移动（相当于此时 fixed 定位）。")])]),t._v(" "),a("h3",{attrs:{id:"_6-new一个对象的过程中经历了什么「红宝书」"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-new一个对象的过程中经历了什么「红宝书」"}},[t._v("#")]),t._v(" 6.new一个对象的过程中经历了什么「红宝书」")]),t._v(" "),a("ol",[a("li",[t._v("在内存中创建一个新对象。")]),t._v(" "),a("li",[t._v("这个新对象内部的[[Prototype]]特性被赋值为构造函数的prototype属性。")]),t._v(" "),a("li",[t._v("构造函数内部的this被赋值为这个新对象（即this指向新对象）。")]),t._v(" "),a("li",[t._v("执行构造函数内部的代码（给新对象添加属性）。")]),t._v(" "),a("li",[t._v("如果构造函数返回非空对象，则返回该对象；否则，返回刚创建的新对象。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("ar a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhang"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jake"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在内存中创造一个新对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 给这个新对象内部的Prototype赋值为构造函数的prototype")]),t._v("\n    obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("__proto__ "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 构造函数内部的代码这样执行")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("Foo")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zhang"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jake"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 如果构造函数返回非空对象，则返回该对象；否则，返回刚刚创建的对象。")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'obj'")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("谁被new了，this就指向谁。")])]),t._v(" "),a("h3",{attrs:{id:"_7-输出了啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7-输出了啥"}},[t._v("#")]),t._v(" 7.输出了啥")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("person")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  person"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("26")]),t._v("\n  person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yyy'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" person\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yck'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("25")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" p2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> {name:'yck',age:26};默认的，被person.age更改了")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// -> {name:'yyy',age:30};挂载到原型上了")]),t._v("\n")])])]),a("h3",{attrs:{id:"_8-typeof-是否能正确判断类型-instanceof能正确判断对象的原理是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8-typeof-是否能正确判断类型-instanceof能正确判断对象的原理是什么"}},[t._v("#")]),t._v(" 8.typeof 是否能正确判断类型？instanceof能正确判断对象的原理是什么？")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("typeof")]),t._v("对于原始类型来说，除了"),a("code",[t._v("null")]),t._v("都可以显示正确的类型\n"),a("code",[t._v("typeof")]),t._v("对于对象来说，除了函数都会显示"),a("code",[t._v("object")]),t._v("，所以说"),a("code",[t._v("typeof")]),t._v("并不能准确判断变量到底是什么类型")])]),t._v(" "),a("p",[a("strong",[t._v("instanceof的内部机制是通过原型链来实现的")])]),t._v(" "),a("ul",[a("li",[t._v("可以用来判断对象的正确类型")]),t._v(" "),a("li",[t._v("对于原始类型来说，你想直接通过 instanceof 来判断类型是不行的，当然我们还是有办法让 instanceof 判断原始类型的")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrimitiveString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("hasInstance"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("typeof")]),t._v(" x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("===")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'String'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'hello world'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("instanceof")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("PrimitiveString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n")])])]),a("ul",[a("li",[t._v("其实自己写一个typeOf做更加准确的判断也未尝不可")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("typeOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("obj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("call")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("slice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("8")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_9-类型转化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9-类型转化"}},[t._v("#")]),t._v(" 9.类型转化")]),t._v(" "),a("p",[a("strong",[t._v("在JS中类型转换只有三种情况：")])]),t._v(" "),a("ul",[a("li",[t._v("转换为布尔值")]),t._v(" "),a("li",[t._v("转换为数字")]),t._v(" "),a("li",[t._v("转换为字符串")])]),t._v(" "),a("ol",[a("li",[t._v("转Boolean")])]),t._v(" "),a("blockquote",[a("p",[t._v("在条件判断的时候，除了"),a("code",[t._v("undefined")]),t._v("、"),a("code",[t._v("null")]),t._v("、"),a("code",[t._v("false")]),t._v("、"),a("code",[t._v("NaN")]),t._v("、''、0、-0，其他所有值都转为"),a("code",[t._v("true")]),t._v("，包括所有对象。")])]),t._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[t._v("对象转原始类型")])]),t._v(" "),a("blockquote",[a("p",[t._v("对象在转换类型的时候，会调用内置的 [[ToPrimitive]] 函数，对于该函数来说，算法逻辑一般来说如下：")])]),t._v(" "),a("ul",[a("li",[t._v("如果已经是原始类型了，那就不需要转换了")]),t._v(" "),a("li",[t._v("如果需要转字符串类型就调用"),a("code",[t._v("x.toString()")]),t._v("，转换为基础类型的话就返回转换的值。不是字符串类型的话就先调用"),a("code",[t._v("valueOf")]),t._v("，结果不是基础类型的话再调用"),a("code",[t._v("toString")]),t._v(".")])]),t._v(" "),a("blockquote",[a("p",[t._v("valueOf解释")]),t._v(" "),a("blockquote",[a("p",[t._v("valueOf方法由Object后面的每个对象继承。 每个内置的核心对象都会覆盖此方法以返回适当的值。如果对象没有原始值，则valueOf将返回对象本身。")])])]),t._v(" "),a("ul",[a("li",[t._v("调用"),a("code",[t._v("x.valueOf()")]),t._v("，如果转换为基础类型，就返回转换的值。")]),t._v(" "),a("li",[t._v("如果都没有返回原始类型，就会报错。")])]),t._v(" "),a("p",[t._v("当然你也可以重写"),a("code",[t._v("Symbol.toPrimitive")]),t._v("，该方法在转原始类型时调用优先级最高。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("Symbol"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("toPrimitive"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// => 3")]),t._v("\n")])])]),a("p",[a("strong",[t._v("四则运算符")])]),t._v(" "),a("blockquote",[a("p",[t._v("加法运算符不同于其他几个运算符，它有以下几个特点：")]),t._v(" "),a("ul",[a("li",[t._v("运算中其中一方为字符串，那么就会把另一方也转化为字符串")]),t._v(" "),a("li",[t._v("如果一方不是字符串或者数字，那么会将它转化为数字或者字符串")])])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// '2'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// "41,2,3"')]),t._v("\n")])])]),a("p",[t._v("另外对于加法还要注意这个表达式 "),a("code",[t._v("'a' + + 'b'")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'a'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'b'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// -> "aNaN"')]),t._v("\n")])])]),a("p",[a("strong",[t._v("那么对于除了加法的运算符来说，只要其中一方是数字，那么另一方就会被转化为数字")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 12")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// NaN")]),t._v("\n")])])]),a("p",[a("strong",[t._v("比较运算符")])]),t._v(" "),a("ol",[a("li",[t._v("如果是对象，就通过"),a("code",[t._v("toPrimitive")]),t._v("转换对象")]),t._v(" "),a("li",[t._v("如果是字符串，就通"),a("code",[t._v("unicode")]),t._v("字符串索引来比较")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("valueOf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\na "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// true")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// a是对象，会通过valueOf转化为原始类型再比较值")]),t._v("\n")])])]),a("h3",{attrs:{id:"_10-keep-alive组件有什么用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10-keep-alive组件有什么用"}},[t._v("#")]),t._v(" 10.keep-alive组件有什么用")]),t._v(" "),a("blockquote",[a("p",[t._v("如果你需要在组件切换的时候，保存一些组件的状态防止多次渲染，则可以使用"),a("code",[t._v("keep-alive")]),t._v("组件包裹需要保存的组件。")])]),t._v(" "),a("blockquote",[a("p",[t._v("对于"),a("code",[t._v("keep-alive")]),t._v("组件来说，它拥有两个独有的生命周期钩子函数，分别为"),a("code",[t._v("activated")]),t._v("和"),a("code",[t._v("deactivated")]),t._v("。用"),a("code",[t._v("keep-alive")]),t._v("包裹的组件在切换时不会进行销毁，而是缓存到内存中并执行"),a("code",[t._v("deactivated")]),t._v("勾子函数，命中缓存渲染后会执行"),a("code",[t._v("actived")]),t._v("勾子函数。")])]),t._v(" "),a("h3",{attrs:{id:"_11-v-show-与-v-if-区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11-v-show-与-v-if-区别"}},[t._v("#")]),t._v(" 11.v-show 与 v-if 区别")]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("v-show")]),t._v("只是在"),a("code",[t._v("display: none")]),t._v("和"),a("code",[t._v("display: block")]),t._v("之间切换。无论初始条件是什么都会被渲染出来，后面只需要切换 CSS，DOM 还是一直保留着的。所以总的来说"),a("code",[t._v("v-show")]),t._v("在初始渲染时有更高的开销，但是切换开销很小，更适合于频繁切换的场景。")])]),t._v(" "),a("blockquote",[a("p",[a("code",[t._v("v-if")]),t._v("的话就得说到 Vue 底层的编译了。当属性初始为"),a("code",[t._v("false")]),t._v("时，组件就不会被渲染，直到条件为 "),a("code",[t._v("true")]),t._v("，并且切换条件时会触发销毁/挂载组件，所以总的来说在切换时开销更高，更适合不经常切换的场景。")])]),t._v(" "),a("h3",{attrs:{id:"_12-组件中-data-什么时候可以使用对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12-组件中-data-什么时候可以使用对象"}},[t._v("#")]),t._v(" 12.组件中 data 什么时候可以使用对象")]),t._v(" "),a("blockquote",[a("p",[t._v("组件复用时所有组件实例都会共享"),a("code",[t._v("data")]),t._v("，如果"),a("code",[t._v("data")]),t._v("是对象的话，就会造成一个组件修改"),a("code",[t._v("data")]),t._v("以后会影响到其他所有组件，所以需要将"),a("code",[t._v("data")]),t._v("写成函数，每次用到就调用一次函数获得新的数据。")])]),t._v(" "),a("blockquote",[a("p",[t._v("当我们使用"),a("code",[t._v("new Vue()")]),t._v("的方式的时候，无论我们将"),a("code",[t._v("data")]),t._v("设置为对象还是函数都是可以的，因为"),a("code",[t._v("new Vue()")]),t._v("的方式是生成一个根组件，该组件不会复用，也就不存在共享"),a("code",[t._v("data")]),t._v("的情况了。")])]),t._v(" "),a("h3",{attrs:{id:"_13-闭包-这个函数有哪几种操作方法。"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13-闭包-这个函数有哪几种操作方法。"}},[t._v("#")]),t._v(" 13.闭包，这个函数有哪几种操作方法。")]),t._v(" "),a("blockquote",[a("p",[t._v("定义：函数A里面有函数B，函数B可以访问到函数A里面的变量，那么函数B就是闭包。")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出5个6")]),t._v("\n")])])]),a("p",[a("strong",[t._v("way1:划分作用域「let」")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("way2:使用闭包方式")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n      console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" j"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("p",[a("strong",[t._v("way3:使用"),a("code",[t._v("setTimeout")]),t._v("的第三个参数")])]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("for")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("++")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("timer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("j")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("j"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" i"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1000")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("i"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h3",{attrs:{id:"_14-1-2-3-map-parseint"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14-1-2-3-map-parseint"}},[t._v("#")]),t._v(" 14.['1','2','3'].map(parseInt)")]),t._v(" "),a("ul",[a("li",[t._v("能够得到什么？")])]),t._v(" "),a("blockquote",[a("p",[t._v("Ans ："),a("code",[t._v("[1,NaN,NaN]")])])]),t._v(" "),a("ul",[a("li",[a("code",[t._v("map")]),t._v("函数的callback:")])]),t._v(" "),a("div",{staticClass:"language-javascript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-javascript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" new_array "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("map")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("callback")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("currentValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// Return element for new_array")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("thisArg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("blockquote",[a("p",[t._v("这个callback一共可以接收三个参数，其中第一个参数代表当前被处理的元素，而第二个参数代表该元素的索引。")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("而parseInt则是用来解析字符串的，使字符串成为指定基数的整数。"),a("code",[t._v("parseInt(string, radix)")]),t._v("接收两个参数，第一个表示被处理的值（字符串），第二个表示为解析时的基数。也就是说：“我们接受的处理的值是填入的字符串的，然后radix是索引”")])]),t._v(" "),a("li",[a("p",[t._v("模拟")])])]),t._v(" "),a("ol",[a("li",[a("code",[t._v("parseInt('1',0)")]),t._v("//"),a("code",[t._v("radix")]),t._v("为0时，且"),a("code",[t._v("string")]),t._v("参数不以"),a("code",[t._v("0x")]),t._v("和"),a("code",[t._v("0")]),t._v("开头时，按照10为基数处理。这个时候返回1.")]),t._v(" "),a("li",[a("code",[t._v("parseInt('2',1)")]),t._v("//基数为1（1进制）表示的数中，最大值小于2，所以无法解析，返回NaN")]),t._v(" "),a("li",[a("code",[t._v("parseInt('3',2)")]),t._v("//基数为2（2进制）表示的数中，最大值小于3，所以无法解析，返回NaN")])])])}),[],!1,null,null,null);s.default=e.exports}}]);